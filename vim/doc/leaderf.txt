*leaderf.txt*   Quickly locate files, buffers, mrus, ... in large project.
*leaderf* *LeaderF*
==============================================================================
/      '7MMF'                            '7MM                `7MM"""YMM      /
/        MM                                MM                  MM    `7      /
/        MM         .gP"Ya   ,6"Yb.   ,M""bMM  .gP"Ya `7Mb,od8 MM   d        /
/        MM        ,M'   Yb 8)   MM ,AP    MM ,M'   Yb  MM' "' MM""MM        /
/        MM      , 8M""""""  ,pm9MM 8MI    MM 8M""""""  MM     MM   Y        /
/        MM     ,M YM.    , 8M   MM `Mb    MM YM.    ,  MM     MM            /
/      .JMMmmmmMMM  'Mbmmd' 'Moo9^Yo.'Wbmd"MML.`Mbmmd'.JMML. .JMML.          /
==============================================================================

CONTENTS                                        *leaderf-contents*
Introduction                                    |leaderf-introduction|
Requirements                                    |leaderf-requirements|
Options                                         |leaderf-options|
Usage                                           |leaderf-usage|
FAQ                                             |leaderf-faq|
Changelog                                       |leaderf-changelog|
Credits                                         |leaderf-credits|
==============================================================================
INTRODUCTION                                    *leaderf-introduction*

This plugin is mainly used for locating files, buffers, mrus in large project.

- Written in Python.
- Support for fuzzy and regex searching.
- Manage buffers and mrus.
- Open multiple files at once.
- Extensible.
==============================================================================
REQUIREMENTS                                    *leaderf-requirements*

- vim7.0 or higher.
- vim compiled with Python support, you can check by using echo has('python')
  or echo has('python3') to see if the result is 1.
==============================================================================
OPTIONS                                         *leaderf-options*

g:leaderf_loaded                                *g:loaded_leaderf*
    Whether leaderf plugin has been loaded.
    Default value is 0.

g:Lf_PythonVersion                              *g:Lf_PythonVersion*
    Set this to 2 or 3 to specify the version of Python this plugin use.
    If both python2 and python3 are supported, the default value is 3,
    otherwise the default value is the supported version.

g:Lf_ShortcutF                                  *g:Lf_ShortcutF*
    Use this option to set the mapping of searching files command.
    e.g. let g:Lf_ShortcutF = '<C-P>'
    Default value is '<leader>f'.

g:Lf_ShortcutB                                  *g:Lf_ShortcutB*
    Use this option to set the mapping of searching buffers command.
    Default value is '<leader>b'.

g:Lf_WindowPosition                             *g:Lf_WindowPosition*
    Setting this option can change the position of the LeaderF window.
    The value can be 'fullScreen', 'top', 'bottom', 'left', 'right'.
    'fullScreen' - the LeaderF window take up the full screen
    'top' - the LeaderF window is at the top of the screen.
    'bottom' - the LeaderF window is at the bottom of the screen.
    'left' - the LeaderF window is at the left of the screen.
    'right' - the LeaderF window is at the right of the screen.
    Default value is 'bottom'.

g:Lf_WindowHeight                               *g:Lf_WindowHeight*
    This option is used to set the default height of the LeaderF window.
    If the value is a floating point number less than 1, it means the
    percentage of the height of the vim window.
    e.g., let g:Lf_WindowHeight = 0.30
    The option will be ignored if the value of |g:Lf_WindowPosition| is
    not 'top' and 'bottom'.
    Default value is 0.5.

g:Lf_TabpagePosition                            *g:Lf_TabpagePosition*
    Specify where to put the newly opened tab page.
    The value can be 0, 1, 2, ...
    0 - make the newly opened tab page the first one.
    1 - put the newly opened tab page before the current one.
    2 - put the newly opened tab page after the current one.
    3 - make the newly opened tab page the last one.
    Default value is 2.

g:Lf_ShowRelativePath                           *g:Lf_ShowRelativePath*
    Whether to show the relative path in the LeaderF window.
    0 - no
    1 - yes
    Default value is 1.

g:Lf_DefaultMode                                *g:Lf_DefaultMode*
    Specify the default mode when LeaderF is launched.
    There are 3 modes, and the corresponding values are:
    'NameOnly' - fuzzy mode, match file name only when searching
    'FullPath' - fuzzy mode, match full path when searching
    'Fuzzy' - fuzzy mode, when lines in the result are not file path
    'Regex' - regex mode
    Default value is 'NameOnly'

g:Lf_CursorBlink                                *g:Lf_CursorBlink*
    Set this option to 1 to let the cursor in the prompt blink, if you don't
    want the cursor to blink, set the value to 0.

g:Lf_CacheDiretory                              *g:Lf_CacheDiretory*
    Set this option to change the location of the cache directory.
    e.g. >
    let g:Lf_CacheDiretory = '/root'
<
    Default value is $HOME.

g:Lf_NeedCacheTime                              *g:Lf_NeedCacheTime*
    This option set a threshold, if the time of indexing files is greater than
    the threshold, cache the files list.
    Default value is 1.5 seconds.

g:Lf_NumberOfCache                              *g:Lf_NumberOfCache*
    This option specify the number of cache.
    Default value is 5.

g:Lf_UseMemoryCache                             *g:Lf_UseMemoryCache*
    Whether to use the memory to cache the indexing result.
    0 - no
    1 - yes
    Default value is 1.

g:Lf_IndexTimeLimit                             *g:Lf_IndexTimeLimit*
    Specify the maximum time of indexing the files that you can tolerate to
    wait.
    Default value is 120 seconds.

g:Lf_FollowLinks                                *g:Lf_FollowLinks*
    Whether to visit directories pointed to by symlinks when indexing.
    0 - no
    1 - yes
    Default value is 0.

g:Lf_WildIgnore                                 *g:Lf_WildIgnore*
    Specify the files and directories you want to exclude while indexing.
    Default value is: >
    let g:Lf_WildIgnore = {
            \ 'dir': ['.svn','.git'],
            \ 'file': ['*.sw?','~$*','*.bak','*.exe','*.o','*.so','*.py[co]']
            \}
<
    Here uses the Unix shell-style wildcards, which are not the same as
    regular expressions. The special characters used in shell-style wildcards
    are: >
    Pattern  |          Meaning
    -------------------------------------------
    *        | matches everything
    ?        | matches any single character
    [seq]    | matches any character in seq
    [!seq]   | matches any character not in seq
    -------------------------------------------
<
g:Lf_DelimiterChar                              *g:Lf_DelimiterChar*
    In NameOnly mode, if you want to refine the result by typing extra
    characters to match the directory, type this character first.
    Default value is ';'.

g:Lf_MruFileExclude                             *g:Lf_MruFileExclude*
    Files you don't want LeaderF to record.
    See |g:Lf_WildIgnore| for the usage of pattern.
    e.g. >
    let g:Lf_MruFileExclude = ['*.so']
<
    Default value is [].

g:Lf_MruMaxFiles                                *g:Lf_MruMaxFiles*
    Specify the number of most recently used files you want LeaderF to record.
    Default value is 100.

g:Lf_HighlightIndividual                        *g:Lf_HighlightIndividual*
    Whether to highlight individual character of the input in the result.
    Set the value to 0 to highlight consecutive characters.
    Default value is 1.

g:Lf_NumberOfHighlight                          *g:Lf_NumberOfHighlight*
    Specify the number of highlight lines in the result.
    Default value is 100.

g:Lf_StlColorscheme                             *g:Lf_StlColorscheme*
    You can configure the colorscheme of statusline for LeaderF.
    e.g. >
    let g:Lf_StlColorscheme = 'powerline'
<
    The colorscheme files can be found in the directory >
	"LeaderF/autoload/leaderf/colorscheme/"
<
    Default value is 'default'.

g:Lf_StlSeparator                               *g:Lf_StlSeparator*
    A Dictionary to store separators.
    The default value is >
    let g:Lf_StlSeparator = { 'left': '►', 'right': '◄' }
<
    If you don't like using separators, you can set the value as below: >
    let g:Lf_StlSeparator = { 'left': '', 'right': '' }
<
    You can also use the patched font you used for |vim-powerline| and |powerline|.

    The patched fonts for |powerline| are available at
    https://github.com/Lokaltog/powerline-fonts

    A tutorial to create a patched font for |vim-powerline| is available at
    https://github.com/Lokaltog/vim-powerline/tree/develop/fontpatcher

    If you have installed the patched font for |powerline|, following setting looks
    nice. >
    let g:Lf_StlSeparator = { 'left': '', 'right': '' }
<
    If you have installed the patched font for |vim-powerline|, following setting
    looks nice. >
    let g:Lf_StlSeparator = { 'left': '⮀', 'right': '⮂' }
<
    If the statusline does not correctly show the special characters, use the
    unicode numbers.
    For |powerline| font users: >
    let g:Lf_StlSeparator = { 'left': "\ue0b0", 'right': "\ue0b2" }
<
    For |vim-powerline| font users: >
    let g:Lf_StlSeparator = { 'left': "\u2b80", 'right': "\u2b82" }
<
g:Lf_StlPalette                                 *g:Lf_StlPalette*
    This is a directory, you can customize the colorscheme using this option.
    Default colorscheme is equivalent to the following setting: >
    let g:Lf_StlPalette = {
            \   'stlName': {
            \       'gui': 'bold',
            \       'font': 'NONE',
            \       'guifg': '#2F5C00',
            \       'guibg': '#BAFFA3',
            \       'cterm': 'bold',
            \       'ctermfg': '22',
            \       'ctermbg': '157'
            \   },
            \   'stlCategory': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#F28379',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '210'
            \   },
            \   'stlNameOnlyMode': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#E8ED51',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '227'
            \   },
            \   'stlFullPathMode': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#AAAAFF',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '147'
            \   },
            \   'stlFuzzyMode': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#E8ED51',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '227'
            \   },
            \   'stlRegexMode': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#7FECAD',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '121'
            \   },
            \   'stlCwd': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#EBFFEF',
            \       'guibg': '#606168',
            \       'cterm': 'NONE',
            \       'ctermfg': '195',
            \       'ctermbg': '241'
            \   },
            \   'stlBlank': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': 'NONE',
            \       'guibg': '#3B3E4C',
            \       'cterm': 'NONE',
            \       'ctermfg': 'NONE',
            \       'ctermbg': '237'
            \   },
            \   'stlLineInfo': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#EBFFEF',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '195'
            \   },
            \   'stlTotal': {
            \       'gui': 'NONE',
            \       'font': 'NONE',
            \       'guifg': '#000000',
            \       'guibg': '#BCDC5C',
            \       'cterm': 'NONE',
            \       'ctermfg': '16',
            \       'ctermbg': '149'
            \   }
            \ }
<
    For example, if you want to change the color of 'stlName', you can configure
    like this: >
    let g:Lf_StlPalette.stlName = {
            \       'gui': 'bold',
            \       'font': 'NONE',
            \       'guifg': '#2F5C00',
            \       'guibg': '#BAFFA3',
            \       'cterm': 'bold',
            \       'ctermfg': '22',
            \       'ctermbg': '157'
            \ }
<
    or just change the color of GUI: >
    let g:Lf_StlPalette.stlName = {
            \       'gui': 'bold',
            \       'font': 'NONE',
            \       'guifg': '#2F5C00',
            \       'guibg': '#BAFFA3'
            \ }
<
g:Lf_CommandMap                                 *g:Lf_CommandMap*
    Use this option to customize the mappings inside LeaderF's
    prompt(|leaderf-prompt|).
    for example, if you want to change the default command <C-F> to <C-D> and
    change the default command <C-Q> to <Esc>: >
    let g:Lf_CommandMap = {'<C-F>': ['<C-D>'], '<C-Q>': ['<Esc>']}
<
==============================================================================
USAGE                                           *leaderf-usage*

:Leaderf [directory] or ,f                      *Leaderf*
    Launch LeaderF to search files.

:LeaderfBuffer or ,b                            *LeaderfBuffer*
    Launch LeaderF to search buffers.

:LeaderfBufferAll                               *LeaderfBufferAll*
    Same as LeaderfBuffer, except that the unlisted buffers are shown.

:LeaderfMru                                     *LeaderfMru*
    Launch LeaderF to search Mru.

:LeaderfMruCwd                                  *LeaderfMruCwd*
    Launch LeaderF to search Mru in current working directory.

Once LeaderF is launched:                       *prompt* *leaderf-prompt*
    <C-C> : quit from LeaderF.
    <C-R> : switch between fuzzy search mode and regex mode.
    <C-F> : switch between full path search mode and name only search mode.
    <ESC> : switch to normal mode.
    <C-V>, <S-Insert> : paste from clipboard.
    <C-U> : clear the prompt.
    <C-J>, <Down>, <C-K>, <Up> : navigate the result list.
    <2-LeftMouse> or <CR> : open the file under cursor or selected(when
                            multiple files are selected).
    <C-X> : open in horizontal split window.
    <C-]> : open in vertical split window.
    <C-T> : open in new tabpage.
    <F5>  : refresh the cache.
    <C-LeftMouse> or <C-S> : select multiple files.
    <S-LeftMouse> : select consecutive multiple files.
    <C-A> : select all files.
    <C-L> : clear all selections.
    <BS>  : delete the preceding character in the prompt.
    <Del> : delete the current character in the prompt.
    <Home>: move the cursor to the begin of the prompt.
    <End> : move the cursor to the end of the prompt.
    <Left>: move the cursor one character to the left.
    <Right> : move the cursor one character to the right.
==============================================================================
FAQ                                             *leaderf-faq*


==============================================================================
CHANGELOG                                       *leaderf-changelog*

==============================================================================
CREDITS                                         *leaderf-credits*

==============================================================================
vim:tw=78:ts=4:ft=help:norl
